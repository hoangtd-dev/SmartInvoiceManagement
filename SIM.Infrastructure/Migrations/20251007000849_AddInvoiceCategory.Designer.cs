// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIM.Infrastructure;

#nullable disable

namespace SIM.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251007000849_AddInvoiceCategory")]
    partial class AddInvoiceCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SIM.Core.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            CreatedDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            TotalAmount = 1399.97m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = 0,
                            CreatedDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            TotalAmount = 449.97m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Category = 0,
                            CreatedDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalAmount = 109.98m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Category = 0,
                            CreatedDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalAmount = 749.96m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Category = 0,
                            CreatedDate = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalAmount = 199.99m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SIM.Core.Entities.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 1,
                            Price = 999.99m,
                            ProductId = 1,
                            Quantity = 1,
                            Total = 999.99m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 1,
                            Price = 199.99m,
                            ProductId = 2,
                            Quantity = 2,
                            Total = 399.98m
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 2,
                            Price = 149.99m,
                            ProductId = 3,
                            Quantity = 3,
                            Total = 449.97m
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 3,
                            Price = 79.99m,
                            ProductId = 5,
                            Quantity = 1,
                            Total = 79.99m
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 3,
                            Price = 29.99m,
                            ProductId = 6,
                            Quantity = 1,
                            Total = 29.99m
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 4,
                            Price = 299.99m,
                            ProductId = 4,
                            Quantity = 1,
                            Total = 299.99m
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 4,
                            Price = 149.99m,
                            ProductId = 3,
                            Quantity = 3,
                            Total = 449.97m
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 5,
                            Price = 199.99m,
                            ProductId = 2,
                            Quantity = 1,
                            Total = 199.99m
                        });
                });

            modelBuilder.Entity("SIM.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-performance laptop",
                            ImageBase64 = "",
                            Price = 999.99m,
                            ProductName = "Laptop",
                            StockQuantity = 50,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24-inch LED monitor",
                            ImageBase64 = "",
                            Price = 199.99m,
                            ProductName = "Monitor",
                            StockQuantity = 100,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ergonomic office chair",
                            ImageBase64 = "",
                            Price = 149.99m,
                            ProductName = "Office Chair",
                            StockQuantity = 75,
                            VendorId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Standing desk",
                            ImageBase64 = "",
                            Price = 79.99m,
                            ProductName = "Desk",
                            StockQuantity = 30,
                            VendorId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mechanical keyboard",
                            ImageBase64 = "",
                            Price = 29.99m,
                            ProductName = "Keyboard",
                            StockQuantity = 200,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wireless mouse",
                            ImageBase64 = "",
                            Price = 299.99m,
                            ProductName = "Mouse",
                            StockQuantity = 150,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "HD webcam",
                            ImageBase64 = "",
                            Price = 149.99m,
                            ProductName = "Webcam",
                            StockQuantity = 80,
                            VendorId = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Noise-cancelling headset",
                            ImageBase64 = "",
                            Price = 199.99m,
                            ProductName = "Headset",
                            StockQuantity = 60,
                            VendorId = 3
                        });
                });

            modelBuilder.Entity("SIM.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@email.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PasswordHash = "abc@123",
                            Phone = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@email.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PasswordHash = "abc@123",
                            Phone = "123-456-7891"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Rd",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.johnson@email.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            PasswordHash = "abc@123",
                            Phone = "123-456-7892"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Elm St",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.brown@email.com",
                            FirstName = "Alice",
                            LastName = "Brown",
                            PasswordHash = "abc@123",
                            Phone = "123-456-7893"
                        },
                        new
                        {
                            Id = 5,
                            Address = "654 Maple Dr",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.wilson@email.com",
                            FirstName = "Charlie",
                            LastName = "Wilson",
                            PasswordHash = "abc@123",
                            Phone = "123-456-7894"
                        });
                });

            modelBuilder.Entity("SIM.Core.Entities.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "789 Tech Park",
                            ContactEmail = "info@techsupplies.com",
                            ContactPhone = "555-100-2000",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorName = "Tech Supplies Inc."
                        },
                        new
                        {
                            Id = 2,
                            Address = "321 Business Blvd",
                            ContactEmail = "sales@officeessentials.com",
                            ContactPhone = "555-100-3000",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorName = "Office Essentials"
                        },
                        new
                        {
                            Id = 3,
                            Address = "555 Digital Ave",
                            ContactEmail = "support@premiumelectronics.com",
                            ContactPhone = "555-100-4000",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorName = "Premium Electronics"
                        });
                });

            modelBuilder.Entity("SIM.Core.Entities.Invoice", b =>
                {
                    b.HasOne("SIM.Core.Entities.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SIM.Core.Entities.InvoiceItem", b =>
                {
                    b.HasOne("SIM.Core.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM.Core.Entities.Product", "Product")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SIM.Core.Entities.Product", b =>
                {
                    b.HasOne("SIM.Core.Entities.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("SIM.Core.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("SIM.Core.Entities.Product", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("SIM.Core.Entities.User", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("SIM.Core.Entities.Vendor", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
